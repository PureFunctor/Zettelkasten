:PROPERTIES:
:ID:       f446efb8-2645-4774-9618-bd6fe1419c13
:END:
#+title: Algebraic Data Types
#+author: PureFunctor
#+date: <2021-10-29 Fri>
#+filetags: :PureScript:

Algebraic data types are a concept in functional programming that describe how data structures takes
shape algebraically, or created using algebraic operations such as sums and products. Contextually,
sum types describe a choice between two or more types, while product types describe a combination of
two or more types.

Algebraic data types are defined using the =data= keyword in PureScript.
#+begin_src purescript
data List a = Nil | Cons a (List a)
#+end_src

Algebraic data types can also be defined recursively as demonstrated in the example above. In order
to avoid infinite recursion however, a base case must also be defined. In this instance, the =Nil=
constructor allows a =List= to eventually terminate.
#+begin_src purescript
> Cons 1 (Cons 2 (Cons 3 Nil))
#+end_src

Additionally, data constructors can also be aliased to [[id:3aee7ca0-9030-4839-9d8b-43112c61ba08][operators]] to provide more elegant ways of
constructing data types.
#+begin_src purescript
> infixr 6 Cons as :

> 1 : 2 : 3 : Nil
#+end_src

Deconstruction of an algebraic data type can be done using [[id:d0079b91-cea6-4adf-8fc0-98ce39f5d5f2][pattern matching]].
